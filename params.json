{"name":"Underscore Extensions Module","body":"# Underscore Extensions Module\r\n\r\n## Overview\r\n\r\nThe goal of this project is to develop a comprehensive, well documented and unit tested set of JavaScript helper functions that can be safely mixed in to [Underscore.js](http://underscorejs.org/) and packaged into an AMD module. Unit testing is powered by the [Jasmine BDD](http://pivotal.github.com/jasmine/) framework and uses the [RequireJS](http://requirejs.org/) AMD module format.\r\n\r\nAt the very least I hope this project serves as a solid template that can be forked, ripped apart and reconfigured to use in any way necessary.\r\n\r\n### Dependencies\r\n\r\n- RequireJS 1.0.8\r\n- Underscore.js 1.3.3\r\n- [Underscore.string](http://epeli.github.com/underscore.string/) 2.2.0rc (*not a strict dependency, right now just included for convenience*)\r\n\r\n## Usage & Examples\r\n\r\nCheck out the _*.spec.js_ files under the _/test/specs/_ folder to see different use cases and examples. For more in-depth explanation of the module's methods [RTFM](http://en.wikipedia.org/wiki/RTFM) (see Documentation section below :P).\r\n\r\n## Documentation\r\n\r\n\r\n### isNullOrUndefined\r\n<p>Check if the value passed is null or undefined.</p>\r\n\r\n<p>Examples</p>\r\n\r\n<pre><code>var result = _.isNullOrUndefined(null) // result == true\r\nvar result = _.isNullOrUndefined(undefined) // result == true\r\nvar result = _.isNullOrUndefined(void 0) // result == true\r\nvar result = _.isNullOrUndefined(\"\") // result == false\r\n</code></pre>\r\n\r\n\r\n\r\n### isWhitespace\r\n<p>Checks if a string contains only whitespace character(s).</p>\r\n\r\n<p>Examples</p>\r\n\r\n<pre><code>var result = _.isWhitespace(\"\") // result == false\r\nvar result = _.isWhitespace(\"Hello World!\") // result == false\r\nvar result = _.isWhitespace(\"  \") // result == true\r\n</code></pre>\r\n\r\n\r\n\r\n### isEmptyOrWhitespace\r\n<p>Checks if an object or array is empty, or, if a string is empty or only contains whitespace characters.<br />Depends on isWhitespace.</p>\r\n\r\n<p>Example</p>\r\n\r\n<pre><code>var result = _.isEmptyOrWhitespace({}) // result == true\r\nvar result = _.isEmptyOrWhitespace([]) // result == true\r\nvar result = _.isEmptyOrWhitespace(\"\") // result == true\r\nvar result = _.isEmptyOrWhitespace(\" \") // result == true\r\n</code></pre>\r\n\r\n\r\n\r\n### hasEmptyOrWhitespaceValues\r\n<p>Checks if any property/value of a non-empty object or array is empty or only contains whitespace characters.<br />Depends on isEmptyOrWhitespace</p>\r\n\r\n<p>Examples</p>\r\n\r\n<pre><code>var result = _.hasEmptyOrWhitespaceValues([1, \"\", 3]) // result == true\r\nvar result = _.hasEmptyOrWhitespaceValues({ one:1, two:2, three:\"   \" }) // result == true\r\n</code></pre>\r\n\r\n\r\n\r\n### toString\r\n<p>Converts and/or ensures that regardless of the input, the output will always be a string.<br />Depends on isNullOrUndefined, isWhitespace and isEmptyOrWhitespace.</p>\r\n\r\n<p>Examples</p>\r\n\r\n<pre><code>var result = _.toString(null) // result == \"\"\r\nvar result = _.toString(undefined) // result == \"\"\r\nvar result = _.toString(undefined, \"fallback!\") // result == \"fallback!\"\r\nvar result = _.toString(123) // result == \"123\"\r\nvar result = _.toString(\"Hello World\") // result == \"Hello World\"\r\n</code></pre>\r\n\r\n\r\n\r\n### objectToQuery\r\n<p>Convert an object to a URL query string. \"Borrowed\" this function from Dojo Toolkit. See <a href='https://github.com/dojo/dojo/blob/9a4f36bab3c49ae405aa6d4e268e4729ca0c6e8e/io-query.js#L9'>https://github.com/dojo/dojo/blob/9a4f36bab3c49ae405aa6d4e268e4729ca0c6e8e/io-query.js#L9</a></p>\r\n\r\n<p>Examples</p>\r\n\r\n<pre><code>var result = _.objectToQuery({ a:1, b:2, c:3 }) // result == \"a=1&amp;b=2&amp;c=3\"\r\nvar result = _.objectToQuery(undefined) // result == \"\"\r\n</code></pre>\r\n\r\n\r\n\r\n### queryToObject\r\n<p>Convert the query string of a URL to an object. \"Borrowed\" this function from Dojo Toolkit. See <a href='https://github.com/dojo/dojo/blob/9a4f36bab3c49ae405aa6d4e268e4729ca0c6e8e/io-query.js#L46'>https://github.com/dojo/dojo/blob/9a4f36bab3c49ae405aa6d4e268e4729ca0c6e8e/io-query.js#L46</a></p>\r\n\r\n<p>Examples</p>\r\n\r\n<pre><code>var result = _.queryToObject(\"a=1&amp;b=2&amp;c=3\") // result ==  { a:1, b:2, c:3 }\r\nvar result = _.queryToObject(\"a=1&amp;b=2&amp;c=3&amp;a=4\") // result ==  { a: ['1', '4'], b:'2', c:'3' }\r\nvar result = _.queryToObject(undefined) // result == {}\r\n</code></pre>\r\n\r\n\r\n\r\n### getPrototypeOf\r\n<p>Function to safely get the prototype object of any object.</p>\r\n\r\n\r\n\r\n\r\n\r\n## Change Log\r\n\r\nNothing to see here yet. Move along.\r\n\r\n## License\r\n\r\nCopyright (c) 2012 Fernando Berrios\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","tagline":"A common set of useful helper functions to be mixed in to Underscore.js. Bundled into a RequireJS module, and unit tested using the Jasmine BDD framework.","google":"UA-31308411-1","note":"Don't delete this file! It's used internally to help with page regeneration."}